package backenddev;

import java.util.*;
import java.util.concurrent.CountDownLatch;
import java.util.logging.FileHandler;
import java.util.logging.Level;
import java.util.logging.SimpleFormatter;


public final class Border{
	public static LinkedList<Vehicle> line = new LinkedList<>();
	public static CountDownLatch cdl = new CountDownLatch(50);//do not run vehicle thread until all of them have been started
	public static PoliceTerminal4T pT = new PoliceTerminal4T();
	public static PoliceTerminals4V pV = new PoliceTerminals4V();
	public static CustomsTerminal4T cT = new CustomsTerminal4T();
	public static CustomsTerminal4V cV = new CustomsTerminal4V();
	public static void decrementCdl(){
		cdl.countDown();
	}
	public static void waitForIt(){
		try{
			cdl.await();
			FileHandler fileHandler = new FileHandler("error.log");
            SimpleFormatter simpleFormatter = new SimpleFormatter();
            fileHandler.setFormatter(simpleFormatter);
            ExceptionHandler.logger.addHandler(fileHandler);
		}
		catch(InterruptedException ie){
			ExceptionHandler.logger.log(Level.SEVERE,ie.fillInStackTrace().toString(), ie);
		}
	}
	public static void printLine(){
		for(Vehicle vehicle : line){
			if(vehicle instanceof Car) System.out.println("car");
			else if(vehicle instanceof Bus) System.out.println("bus");
			else System.out.println("truck");
		}
	}
	public static void startVehicles(){
		for(Vehicle v : line){
			v.start();
		}
	}
	public static void setLine(){
		Random random = new Random();
		for(int i = 0;i<35;i++) line.add(new Car());
		for(int i = 0;i<10;i++) line.add(new Truck(10000-random.nextInt(5000)+random.nextDouble()));
		for(int i = 0;i<5;i++) line.add(new Bus());
		Collections.shuffle(line);
		printLine();
	}
	
	
}