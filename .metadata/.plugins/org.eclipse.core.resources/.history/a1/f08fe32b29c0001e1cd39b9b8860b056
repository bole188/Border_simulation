package backenddev;

import java.io.FileOutputStream;
import java.io.IOException;
import java.io.ObjectOutputStream;
import java.util.ArrayList;
import java.util.logging.Level;
import java.nio.*;
import java.nio.file.Files;

public class Terminals extends Thread{
	public Terminals(){}
	protected String pathToFile = "person.ser";
	protected String pathToTxtFile = "CustomsFile.txt";
	protected ArrayList<Person> peopleWithInvalidDoc = new ArrayList<Person>();
	public boolean checkDocuments(Vehicle v) {
		int i = 1;
		ArrayList<Person> secondPassengerList = new ArrayList<Person>(v.passengers);
		while(i<=secondPassengerList.size())
		{
			if(PossibilityCalculator.calculate(3)) 
			{
				if(peopleWithInvalidDoc.isEmpty() && Files.exists(pathToFile))
				if(peopleWithInvalidDoc.isEmpty()) {
					peopleWithInvalidDoc.add(v.passengers.get(i-1));
					try{
						FileOutputStream fos = new FileOutputStream(pathToFile,true);
						ObjectOutputStream oos = new ObjectOutputStream(fos);
						oos.writeObject(v.passengers.get(i-1));
						oos.close();
					}catch(IOException e) {
						ExceptionHandler.logger.log(Level.SEVERE,e.fillInStackTrace().toString(), e);
					}
				}
				else {
					peopleWithInvalidDoc.add(v.passengers.get(i-1));
					try{
						FileOutputStream fos = new FileOutputStream(pathToFile,true);
						AppObjectOutputStream aoos = new AppObjectOutputStream(fos);
						aoos.writeObject(v.passengers.get(i-1));
						aoos.close();
					}catch(IOException e) {
						ExceptionHandler.logger.log(Level.SEVERE,e.fillInStackTrace().toString(), e);
					}
				}
				if(i==1) 
				{
					VehiclesWithIncidents.addVehicle(v);
					return false;
				}
			secondPassengerList.remove(i-1);
			}
			else i++;
		}
		v.setPassengersNumber(secondPassengerList.size());
		v.setPassengers(secondPassengerList);
		return true;
	}
}
